/**
 * @preserve
 * yourasm name
 * yourasm description
 * 
 * Assembly: ns.asm
 *     File: ./ns.asm.js
 *  Version: 0.9.10
 *  Sun, 04 Aug 2019 04:25:10 GMT
 * 
 * yourasm copyright
 * MIT
 */
!function(e,s){"use strict";"function"==typeof!0&&(!0).amd?(!0)(s):"object"==typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=s),module.exports=exports=s):e["ns.asm"]=s}(this,async function(e,s){"use strict";const{Class:t,Struct:n,Enum:i,Interface:r,Mixin:a,Aspects:o,AppDomain:c,$$:$,attr:m,bring:d,Container:l,include:u,Port:p,on:f,post:g,telemetry:y,Reflector:x,Serializer:A,Tasks:b,as:S,is:v,isDefined:O,isComplies:h,isDerivedFrom:T,isAbstract:C,isSealed:I,isStatic:N,isSingleton:j,isDeprecated:z,isImplements:k,isInstanceOf:B,isMixed:D,getAssembly:M,getAttr:P,getContext:w,getResource:E,getRoute:R,getType:F,ns:L,getTypeOf:J,getTypeName:U,typeOf:V,dispose:G,using:W,Args:q,Exception:H,noop:K,nip:Q,nim:X,nie:Y,event:Z}=e,{TaskInfo:_}=e.Tasks,{env:ee}=e.options,{guid:se,forEachAsync:te,replaceAll:ne,splitAndTrim:ie,findIndexByProp:re,findItemByProp:ae,which:oe,isArrowFunc:ce,isASyncFunc:$e,sieve:me,deepMerge:de,getLoadedScript:le,b64EncodeUnicode:ue,b64DecodeUnicode:pe}=e.utils,{$$static:fe,$$abstract:ge,$$virtual:ye,$$override:xe,$$sealed:Ae,$$private:be,$$privateSet:Se,$$protected:ve,$$protectedSet:Oe,$$readonly:he,$$async:Te,$$overload:Ce,$$enumerate:Ie,$$dispose:Ne,$$post:je,$$on:ze,$$timer:ke,$$type:Be,$$args:De,$$inject:Me,$$resource:Pe,$$asset:we,$$singleton:Ee,$$serialize:Re,$$deprecate:Fe,$$session:Le,$$state:Je,$$conditional:Ue,$$noserialize:Ve,$$ns:Ge}=$,We=ee.isServer||ee.isWorker?null:(!0).document,qe=c.context.current().name,He=s,Ke=He.substr(0,He.lastIndexOf("/")+1);c.loadPathOf("ns.asm",Ke);let Qe=JSON.parse('{"settingName":"defaultSettingValue"}'),Xe=e.Port("settingsReader");if("function"==typeof Xe){let e=Xe("ns.asm");e&&(Qe=de([Qe,e],!1))}Qe=Object.freeze(Qe);let Ye=JSON.parse("{}");Ye=Object.freeze(Ye);let Ze=()=>{};return c.context.current().currentAssemblyBeingLoaded("./ns.asm{.min}.js"),await(async()=>{$("ns","ns.asm"),t("ClassName1",function(){})})(),await(async()=>{$("ns","ns.asm.something"),t("ClassName2",function(){})})(),c.context.current().currentAssemblyBeingLoaded(""),c.registerAdo('{"name":"ns.asm","file":"./ns.asm{.min}.js","package":"yourasm","desc":"yourasm description","title":"yourasm name","version":"0.9.10","lupdate":"Sun, 04 Aug 2019 04:25:10 GMT","builder":{"name":"flairBuild","version":"1","format":"fasm","formatVersion":"1","contains":["init","func","type","vars","reso","asst","rout","sreg"]},"copyright":"yourasm copyright","license":"MIT","types":["ns.asm.ClassName1","ns.asm.something.ClassName2"],"resources":[],"assets":[],"routes":[]}'),Object.freeze({name:"ns.asm",settings:Qe,config:Ye})});