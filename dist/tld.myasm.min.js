/**
 * @preserve
 * yourasm name
 * yourasm description
 * 
 * Assembly: tld.myasm
 *     File: ./tld.myasm.js
 *  Version: 0.59.0
 *  Thu, 05 Sep 2019 01:26:36 GMT
 * 
 * yourasm copyright
 * MIT
 */
!function(e,t){"use strict";"function"==typeof!0&&(!0).amd?(!0)(()=>t):"object"==typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=t),module.exports=exports=t):e["tld.myasm"]=t}(this,async function(e,t){"use strict";const{Class:s,Struct:n,Enum:i,Interface:r,Mixin:a,Aspects:o,AppDomain:c,$$:l,attr:$,bring:d,Container:m,include:u,Port:p,on:f,post:y,telemetry:g,Reflector:b,Serializer:x,Tasks:S,as:v,is:A,isDefined:O,isComplies:T,isDerivedFrom:C,isAbstract:I,isSealed:h,isStatic:j,isSingleton:z,isDeprecated:k,isImplements:B,isInstanceOf:D,isMixed:M,getAssembly:N,getAttr:P,getContext:w,getResource:R,getRoute:E,getType:F,ns:L,getTypeOf:V,getTypeName:J,typeOf:U,dispose:G,using:W,Args:q,Exception:H,noop:K,nip:Q,nim:X,nie:Y,event:Z}=e,{TaskInfo:_}=e.Tasks,{env:ee}=e.options,{guid:te,stuff:se,replaceAll:ne,splitAndTrim:ie,findIndexByProp:re,findItemByProp:ae,which:oe,isArrowFunc:ce,isASyncFunc:le,sieve:$e,deepMerge:de,getLoadedScript:me,b64EncodeUnicode:ue,b64DecodeUnicode:pe,lens:fe,globalSetting:ye}=e.utils,{$$static:ge,$$abstract:be,$$virtual:xe,$$override:Se,$$sealed:ve,$$private:Ae,$$privateSet:Oe,$$protected:Te,$$protectedSet:Ce,$$readonly:Ie,$$async:he,$$overload:je,$$enumerate:ze,$$dispose:ke,$$post:Be,$$on:De,$$timer:Me,$$type:Ne,$$args:Pe,$$inject:we,$$resource:Re,$$asset:Ee,$$singleton:Fe,$$serialize:Le,$$deprecate:Ve,$$session:Je,$$state:Ue,$$conditional:Ge,$$noserialize:We,$$ns:qe}=l,He=ee.isServer||ee.isWorker?null:(!0).document,Ke=c.context.current().name,Qe=t,Xe=Qe.substr(0,Qe.lastIndexOf("/")+1);c.loadPathOf("tld.myasm",Xe);let Ye=JSON.parse('{"settingName":"defaultSettingValue"}'),Ze=e.Port("settingsReader");if("function"==typeof Ze){let e=Ze("tld.myasm");e&&(Ye=de([Ye,e],!1))}Ye=Object.freeze(Ye);let _e=JSON.parse('{"configName":"configValue"}');_e=Object.freeze(_e);let et=()=>{};return c.context.current().currentAssemblyBeingLoaded("./tld.myasm{.min}.js"),await(async()=>{l("ns","tld.myasm.feature1"),s("Class1",function(){})})(),await(async()=>{l("ns","tld.myasm.feature2"),s("Class2",function(){})})(),c.context.current().currentAssemblyBeingLoaded(),c.registerAdo('{"name":"tld.myasm","file":"./tld.myasm{.min}.js","package":"yourasm","desc":"yourasm description","title":"yourasm name","version":"0.59.0","lupdate":"Thu, 05 Sep 2019 01:26:36 GMT","builder":{"name":"flairBuild","version":"1","format":"fasm","formatVersion":"1","contains":["init","func","type","vars","reso","asst","rout","sreg"]},"copyright":"yourasm copyright","license":"MIT","types":["tld.myasm.feature1.Class1","tld.myasm.feature2.Class2"],"resources":[],"assets":[],"routes":[]}'),Object.freeze({name:"tld.myasm",settings:Ye,config:_e})});